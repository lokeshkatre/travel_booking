{"ast":null,"code":"var _jsxFileName = \"H:\\\\tourBooking\\\\frontend\\\\src\\\\hooks\\\\useFetch.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = _ref => {\n  _s();\n  let {\n    url\n  } = _ref;\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Network response was not OK');\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Data Fetched Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(MyComponent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = MyComponent;\nexport default useFetch;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["useState","useEffect","MyComponent","url","data","setData","fetchData","response","fetch","ok","Error","jsonData","json","error","console","log","JSON","stringify","useFetch"],"sources":["H:/tourBooking/frontend/src/hooks/useFetch.js"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst MyComponent = ({ url }) => {\r\n    const [data, setData] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(url);\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not OK');\r\n          }\r\n          const jsonData = await response.json();\r\n          setData(jsonData);\r\n        } catch (error) {\r\n          console.log('Error fetching data:', error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, [url]);\r\n  \r\n    return (\r\n      <div>\r\n        {data ? (\r\n          <div>\r\n            <h1>Data Fetched Successfully!</h1>\r\n            <pre>{JSON.stringify(data, null, 2)}</pre>\r\n          </div>\r\n        ) : (\r\n          <p>Loading data...</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default useFetch;"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,MAAMC,WAAW,GAAG,QAAa;EAAA;EAAA,IAAZ;IAAEC;EAAI,CAAC;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMK,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;QACjC,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QACtCP,OAAO,CAACM,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDP,SAAS,EAAE;EACb,CAAC,EAAE,CAACH,GAAG,CAAC,CAAC;EAET,oBACE;IAAA,UACGC,IAAI,gBACH;MAAA,wBACE;QAAA,UAAI;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAA,UAAMY,IAAI,CAACC,SAAS,CAACb,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,gBAEN;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA;EACnB;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAhCEF,WAAW;AAAA,KAAXA,WAAW;AAmCjB,eAAegB,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}